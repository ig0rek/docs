***************
Durak
***************

"Карта" здесь и ниже - это текстовая строка-идентификатор игральной карты (2 или 3 символа). Имеет формат МАСТЬЗНАЧЕНИЕ (для примера: H6, SJ, C10, DA).
Первый символ - это масть::

"S" - Spades - пики (вини)
"C" - Clubs - трефы (крести)
"H" - Hearts - червы
"D" - Diamonds - бубны (буби)

Остальные символы - значение::

"6";
"7";
"8";
"9";
"10";
"J" - Jack - валет;
"Q" - Queen - королева;
"K" - King - король;
"A" - Ace - туз

Старт игры
====================================

Игра запускается по обычным правилам:
создаётся стол (автоматически присоединяется автор стола), присоединяется второй игрок, оба нажимают "готов" и автоматически стартует игра.

``Чтобы сесть за стол, у игрока должна быть доступная для списания сумма на счету (равная ставке стола)``

При старте игры у каждого игрока списывается ставка (равная ставке стола).

**Ответ от сервера:**

.. literalinclude:: code/game_start.json

Так же, прилетит событие "game.player.start" (каждому игроку - своё сообщение), внутри - список карт на руке:

.. literalinclude:: code/game.player.start.json

Ход игрока
====================================

Каждый игрок делает запрос "ход текущего игрока".

Если нет карт на столе (пусто data.board.thrown_cards), самый первый ход после отбоя.
-------------------------------------------------------------------------------------

Игроку нельзя "пасовать".

.. literalinclude:: code/move.json

Подбрасываем карту.
-------------------

.. literalinclude:: code/toss.json

"защищающийся"/"отбивающийся" кроет карту/карты.
------------------------------------------------

Если игра "дурак переводной", то у "отбивающегося" может быть ситуация, когда он будет крыть сразу больше одной карты.

Если "дурак подкидной" - то кроет всегда только одну карту

.. literalinclude:: code/defend.json

Перевести карту другому игроку.
-------------------------------

Данный вариант хода доступен только для игры "дурак переводной".

Нельзя переводить до первого "отбоя". Только игрок с флагом "защищающийся" может переводить. Нельзя переводить, если на столе уже есть "непокрытые" карты. Нельзя переводить картой, значение которой отлично от значения карт на столе. Нельзя переводить, если следующий игрок имеет меньше карт на руке, чем количество карт на столе + 1.

.. literalinclude:: code/transfer.json

Сделать пас.
-------------

Работает как для обычного игрока, так и для "защищающегося".

.. literalinclude:: code/transfer.json

Структура ответа
=================

Ответ от сервера
----------------

.. literalinclude:: code/answer.json

Структура ответа во время хода практически аналогична ответу после старта.

Если на предыдущем ходу произошёл отбой (data.is_end_of_round):

* всем раздаются карты из колоды,
* карты со стола либо скидываются, либо уходят в руку предыдущего защитника,
* определяется кто ходит следующий

Если флаг последнего хода (data.is_end_of_match) был true, то данный ход был последним.

Структура ответа о "предыдущем ходе" (data.prev_move)
-----------------------------------------------------

Если был ход "move", "toss" или "transfer":

.. literalinclude:: code/move_toss_transfer_ans.json

Если был ход "check":

.. literalinclude:: code/check_ans.json

Если был ход "defend":

Если игра "дурак переводной", то в массиве pairs - может быть больше одного объекта.

.. literalinclude:: code/defend_ans.json

В конце каждого хода игрока, прилетит событие "game.player.move", внутри - список карт на руке (структура аналогична "game.player.start").

Если был "отбой" - каждому так же прилетит "game.player.move".

Конец игры
===========

Сразу после последнего хода в центрифугу прилетит сообщение о завершении игры с результатами.

Ответ от сервера:

.. literalinclude:: code/game_end.json

Игрок покидает игру
===================

Если игрок выходит из игры (сам или его выкинет сервер), то всем прилетит событие "game.dispatch" с картами данного игрока. Структура аналогична "game.player.start" / "game.player.move"