***************
Preferans
***************

"Карта" здесь и ниже - это текстовая строка-идентификатор игральной карты (2 или 3 символа). Имеет формат МАСТЬЗНАЧЕНИЕ (для примера: H6, SJ, C10, DA).
Первый символ - это масть::

"S" - Spades - пики (вини)
"C" - Clubs - трефы (крести)
"H" - Hearts - червы
"D" - Diamonds - бубны (буби)

Остальные символы - значение::

"7";
"8";
"9";
"10";
"J" - Jack - валет;
"Q" - Queen - королева;
"K" - King - король;
"A" - Ace - туз

Старт игры
====================================

В преферансе участвует 3 игрока.

После старта игры, кроме основного сообщения от сервера (о нём ниже), так же прилетит событие "game.player.start" (каждому игроку - своё сообщение), внутри - сортированный список карт на руке:

.. literalinclude:: code/game_start.json

Ход игрока
====================================

**Варианты хода**

Сделать пас.
------------------------------------

Работает как для выбора контракта, так и при выборе виста

.. literalinclude:: code/pass.json

Сделать ставку.
------------------------------------

.. literalinclude:: code/bet.json

Мизер.
------------------------------------

.. literalinclude:: code/misere.json

Мизер без прикупа.
------------------------------------

.. literalinclude:: code/misere_wt.json

Полувист.
------------------------------------

.. literalinclude:: code/whist_half.json

Выбор типа виста.
------------------------------------

.. literalinclude:: code/whist_type.json

Скинуть две карты.
------------------------------------

.. literalinclude:: code/drop.json

Кинуть карту.
------------------------------------

.. literalinclude:: code/throw.json

**Структура ответа**

Ответ от сервера после хода практически аналогичен ответу при старте (при старте нет "data.move.prev")

Ответ сервера
------------------------------------

.. literalinclude:: code/answer.json

Здесь и ниже "первый/второй/третий" игрок - это не фактическое место за столом, а условно-принятый порядковый номер для позиционирования в игре. Не меняется во время партии! 

Стадии игры
------------------------------------

* "betting" - стадия торговли
* "whist" - выбор виста
* "drop" - сброс двух карт
* "game" - игра (когда разыгрывают взятки)

Объект игрока
------------------------------------

.. literalinclude:: code/player.json

Контракты игрока
------------------------------------

Ставка:

.. literalinclude:: code/contract_bet.json

Мизер:

.. literalinclude:: code/contract_misere.json

Мизер без прикупа:

.. literalinclude:: code/contract_misere_wt.json

Пасс:

.. literalinclude:: code/contract_pass.json

Вист:

.. literalinclude:: code/contract_whist.json

Полвиста:

.. literalinclude:: code/contract_whist_half.json

Взятка
------------------------------------

.. literalinclude:: code/trick.json

Структура одинакова как в сущности игрока ("players.*.tricks"), так и на столе ("board.trick")

Зона игрока в пульке
------------------------------------

.. literalinclude:: code/score_sheet.json

**Структура ответа о "предыдущем ходе**

(data.move.prev)

Сделал пас
------------------------------------

.. literalinclude:: code/prev_pass.json

Сделал ставку
------------------------------------

.. literalinclude:: code/prev_bet.json

Мизер
------------------------------------

.. literalinclude:: code/prev_misere.json

Мизер без прикупа
------------------------------------

.. literalinclude:: code/prev_misere_wt.json

Вист
------------------------------------

.. literalinclude:: code/prev_whist.json

Полувист
------------------------------------

.. literalinclude:: code/prev_whist_half.json

Выбрал тип виста
------------------------------------

.. literalinclude:: code/prev_whist_type.json

Скинул две карты
------------------------------------

.. literalinclude:: code/prev_drop.json

Кинул карту
------------------------------------

.. literalinclude:: code/prev_throw.json

В конце каждого хода игрока, прилетит событие "game.player.move", внутри - список карт на руке (структура аналогична "game.player.start").

**Структура ответа о "следующем ходе"**

(data.move.next.choice)

Сервер присылает возможные варианты хода следующего игрока.

TODO: структура будет похожа на "вариант хода" / "предыдущий ход"

**Игрок заявляет о своей победе**

Во время игры игрок может предложить другим игрокам закончить раздачу и согласиться с тем, что он выиграл N-взяток.

TODO: скорее всего, всем прилетит событие "game.dispatch" с картами данного игрока

Конец игры
====================================

Сразу после последнего хода прилетит событие "game.finish" о завершении игры с результатами.

.. literalinclude:: code/game_end.json

Игрок покидает игру
====================================

Если игрок выходит из игры (сам или его выкинет сервер), то его заменяет "бот" - теперь все ходы за него будет делать сам сервер.

Если из игры выйдет сразу два игрока, то игра завершится.